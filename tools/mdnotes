#!/usr/bin/perl

# mdnotes PREFIX SUBJECT
#   Create the notes (not quite an outline) for the given subject.
#
# Note: 
#   Requires that ../resources/subjects.ent exists and contain an
#   entity for abbrevNN

# +---------+---------------------------------------------------------
# | Globals |
# +---------+

# $PREFIX - The prefix used for all the files for this day
my $PREFIX = shift;

# $SUBJECT - The subject of the notes
my $SUBJECT = shift;

# +------+------------------------------------------------------------
# | Main |
# +------+

# Print the start of the page
print "Notes on $SUBJECT\n";
printN("=", length("Notes on $SUBJECT\n"));
print ("\n");

my $pre = "**";
my $post = "**";

# The three introductory things: Summary, list of related topics, overview
includeMDFile("summaries/$PREFIX.md", "${pre}Summary${post}");
includeMDFile("related/$PREFIX.md", "${pre}Related Pages${post}");
includeMDFile("overviews/$PREFIX.md", "${pre}Overview${post}");

# And the body
includeOptionalMDFile("bodies/$PREFIX.md");

# And that's it

# +-------------+-----------------------------------------------------
# | Subroutines |
# +-------------+

# includeOptionalMDFile(filename,prelim)
#   Add code to include the file, but only if it exists.  Also includes
#   the prelim
sub includeOptionalMDFile()
{
  my $file = shift;
  my $prelim = shift;
  if (-f $file) {
    includeMDFile($file, $prelim);
  }
} # includeOptionalMDFile

# includeMDFile(filename,prelim)
#   Add code to include the file
sub includeMDFile()
{
  my $file = shift;
  my $prelim = shift;
  print STDERR "Including '$file'\n";
  if ("$prelim") {
    print "\n$prelim\n\n";
  }
  print readFile($file);
} # includeMDFile
    
# lookupEntity(entity,file)
#   Look up the entity in an entity file.
sub lookupEntity($$)
{
  my $entity = shift;
  my $file = shift;
  my $result = `grep $entity $file`;
  chomp($result);
  $result =~ s/^[^"]*"//;
  $result =~ s/".*$//;
  return $result;
} # lookupEntity()

# lookupClassDate(num)
#   Look up the date for a particular class.
sub lookupClassDate($)
{
  my $num = shift;
  my $day = lookupEntity("date$num", $dates);
  $day =~ s/^\&//;
  $day =~ s/;$//;
  my $date = lookupEntity("$day", $calendar);
  return $date;
} # lookupClassDate

# printN(str, n)
#   Prints N copies of str
sub printN
{
  my $str = shift;
  my $n = shift;
  for (my $i = 0; $i < $n; $i++) {
    print $str;
  }
} # printN

# readFile(filename)
#   Read in the contents of the specified file.
sub readFile
{
  my $filename = shift;
  my $linesep = $/; # Save for later
  undef $/; # When $/ is undefined, read reads the wholefile
  open(TMPFILE, "< $filename");
  my $contents = <TMPFILE>;
  close(TMPFILE);
  $/ = $linesep; # Restore
  return $contents;
} # readFile

# twoDigits(num)
#   Express a number as two (or more) digits)
#   Pre: 0 <= num < 100
sub twoDigits()
{
  my $n = shift;
  $n = $n + 0; # remove leading 0's
  if ($n < 10) {
    return "0$n";
  }
  else {
    return "$n";
  }
} # twoDigits()
